[{"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\index.js":"1","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\reportWebVitals.js":"2","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\App.js":"3","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\pages\\weather.js":"4","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\components\\userConsent.js":"5","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\services\\tempToColorConverterService.js":"6","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\services\\weatherService.js":"7","C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\index.js":"8","C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\App.js":"9","C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\reportWebVitals.js":"10","C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\components\\userConsent.js":"11","C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\services\\tempToColorConverterService.js":"12","C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\pages\\weather.js":"13","C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\services\\weatherService.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":845,"mtime":1609902154012,"results":"18","hashOfConfig":"16"},{"size":3285,"mtime":1609902120242,"results":"19","hashOfConfig":"16"},{"size":810,"mtime":1609879011529,"results":"20","hashOfConfig":"16"},{"size":1345,"mtime":1609897445129,"results":"21","hashOfConfig":"16"},{"size":298,"mtime":1609901289236,"results":"22","hashOfConfig":"16"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":845,"mtime":1609902154012,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":810,"mtime":1609879011529,"results":"27","hashOfConfig":"24"},{"size":1345,"mtime":1609897445129,"results":"28","hashOfConfig":"24"},{"size":3285,"mtime":1609902120242,"results":"29","hashOfConfig":"24"},{"size":304,"mtime":1609928833022,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"17z8n9n",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pq9r9j",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\index.js",[],["61","62"],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\reportWebVitals.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\App.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\pages\\weather.js",["63","64"],"import React, { useEffect, useState } from 'react';\r\nimport lodash from 'lodash';\r\nimport WeatherService from '../services/weatherService';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TempToColorConverterService from '../services/tempToColorConverterService';\r\n\r\nfunction Weather(props) {\r\n    const [iconCode, setIconCode] = useState();\r\n    const [error, setError] = useState();\r\n    const [isGeoLocationAvailable, setIsGeolocationAvailable] = useState(false);\r\n\r\n    if (\"geolocation\" in navigator && !isGeoLocationAvailable) {\r\n        navigator.permissions.query({ name: 'geolocation' }).then(permissionStatus => {\r\n            if (permissionStatus.state === 'granted') {\r\n                setIsGeolocationAvailable(true);\r\n            } else {\r\n                permissionStatus.onchange = function () {\r\n                    setIsGeolocationAvailable(this.state === 'granted');\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(\r\n            position => {\r\n                WeatherService.getWeatherData(position.coords.latitude, position.coords.longitude).then((data) => {\r\n                    props.setTemp(lodash.get(data, 'data.main.temp', '0'));\r\n                    const iconCode = lodash.get(data, 'data.weather.0.icon');\r\n                    setIconCode(`http://openweathermap.org/img/wn/${iconCode}@2x.png`);\r\n                }).catch(error => {\r\n                    console.error(error.message);\r\n                    setError(\"Oops. Something went wrong\");\r\n                });\r\n            },\r\n            error => {\r\n                console.error(\"Error Code = \" + error.code + \" - \" + error.message);\r\n                setError(\"Oops. Something went wrong\");\r\n            }\r\n        );\r\n    }, [isGeoLocationAvailable])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!isGeoLocationAvailable &&\r\n                <h1>We can't fetch your location. Feels bad.</h1>}\r\n            {isGeoLocationAvailable &&\r\n                <React.Fragment>\r\n                    {error && <h1>{error}</h1>}\r\n                    {!error && iconCode &&\r\n                        <React.Fragment>\r\n                            <div className=\"main-wrapper\">\r\n                                <img src={iconCode} />\r\n                                <p>{props.temp} â„ƒ</p>\r\n                            </div>\r\n                            <div className=\"slider-wraper\">\r\n                                <Slider\r\n                                    defaultValue={0}\r\n                                    aria-labelledby=\"discrete-slider\"\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    step={1}\r\n                                    min={TempToColorConverterService._min.temp}\r\n                                    max={TempToColorConverterService._max.temp}\r\n                                    value={props.temp}\r\n                                    onChange={(event, newValue) => { props.setTemp(newValue) }}\r\n                                />\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                </React.Fragment>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Weather;","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\components\\userConsent.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\services\\tempToColorConverterService.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\services\\weatherService.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\index.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\App.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\reportWebVitals.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\components\\userConsent.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\services\\tempToColorConverterService.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\pages\\weather.js",["65","66"],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\repo\\src\\services\\weatherService.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":41,"column":8,"nodeType":"73","endLine":41,"endColumn":32,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":53,"column":33,"nodeType":"77","endLine":53,"endColumn":55},{"ruleId":"71","severity":1,"message":"72","line":41,"column":8,"nodeType":"73","endLine":41,"endColumn":32,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"76","line":53,"column":33,"nodeType":"77","endLine":53,"endColumn":55},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["81"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"83","fix":"85"},"Update the dependencies array to be: [isGeoLocationAvailable, props]",{"range":"86","text":"87"},{"range":"88","text":"87"},[1802,1826],"[isGeoLocationAvailable, props]",[1802,1826]]