[{"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\index.js":"1","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\reportWebVitals.js":"2","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\App.js":"3","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\pages\\weather.js":"4","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\components\\userConsent.js":"5","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\services\\tempToColorConverterService.js":"6","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\services\\weatherService.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":845,"mtime":1609902154012,"results":"11","hashOfConfig":"9"},{"size":3285,"mtime":1609902120242,"results":"12","hashOfConfig":"9"},{"size":810,"mtime":1609879011529,"results":"13","hashOfConfig":"9"},{"size":1345,"mtime":1609897445129,"results":"14","hashOfConfig":"9"},{"size":298,"mtime":1609901289236,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"17z8n9n",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\index.js",[],["32","33"],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\reportWebVitals.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\App.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\pages\\weather.js",["34","35"],"import React, { useEffect, useState } from 'react';\r\nimport lodash from 'lodash';\r\nimport WeatherService from '../services/weatherService';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TempToColorConverterService from '../services/tempToColorConverterService';\r\n\r\nfunction Weather(props) {\r\n    const [iconCode, setIconCode] = useState();\r\n    const [error, setError] = useState();\r\n    const [isGeoLocationAvailable, setIsGeolocationAvailable] = useState(false);\r\n\r\n    if (\"geolocation\" in navigator && !isGeoLocationAvailable) {\r\n        navigator.permissions.query({ name: 'geolocation' }).then(permissionStatus => {\r\n            if (permissionStatus.state === 'granted') {\r\n                setIsGeolocationAvailable(true);\r\n            } else {\r\n                permissionStatus.onchange = function () {\r\n                    setIsGeolocationAvailable(this.state === 'granted');\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(\r\n            position => {\r\n                WeatherService.getWeatherData(position.coords.latitude, position.coords.longitude).then((data) => {\r\n                    props.setTemp(lodash.get(data, 'data.main.temp', '0'));\r\n                    const iconCode = lodash.get(data, 'data.weather.0.icon');\r\n                    setIconCode(`http://openweathermap.org/img/wn/${iconCode}@2x.png`);\r\n                }).catch(error => {\r\n                    console.error(error.message);\r\n                    setError(\"Oops. Something went wrong\");\r\n                });\r\n            },\r\n            error => {\r\n                console.error(\"Error Code = \" + error.code + \" - \" + error.message);\r\n                setError(\"Oops. Something went wrong\");\r\n            }\r\n        );\r\n    }, [isGeoLocationAvailable])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!isGeoLocationAvailable &&\r\n                <h1>We can't fetch your location. Feels bad.</h1>}\r\n            {isGeoLocationAvailable &&\r\n                <React.Fragment>\r\n                    {error && <h1>{error}</h1>}\r\n                    {!error && iconCode &&\r\n                        <React.Fragment>\r\n                            <div className=\"main-wrapper\">\r\n                                <img src={iconCode} />\r\n                                <p>{props.temp} â„ƒ</p>\r\n                            </div>\r\n                            <div className=\"slider-wraper\">\r\n                                <Slider\r\n                                    defaultValue={0}\r\n                                    aria-labelledby=\"discrete-slider\"\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    step={1}\r\n                                    min={TempToColorConverterService._min.temp}\r\n                                    max={TempToColorConverterService._max.temp}\r\n                                    value={props.temp}\r\n                                    onChange={(event, newValue) => { props.setTemp(newValue) }}\r\n                                />\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n                </React.Fragment>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Weather;","C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\components\\userConsent.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\services\\tempToColorConverterService.js",[],"C:\\Users\\Balodya\\Desktop\\HMSD_React\\weather\\src\\services\\weatherService.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":41,"column":8,"nodeType":"42","endLine":41,"endColumn":32,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":53,"column":33,"nodeType":"46","endLine":53,"endColumn":55},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["49"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [isGeoLocationAvailable, props]",{"range":"52","text":"53"},[1802,1826],"[isGeoLocationAvailable, props]"]